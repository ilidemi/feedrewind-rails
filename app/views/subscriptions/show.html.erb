<div class="flex flex-col gap-12">
  <div class="flex flex-col gap-6">
    <div class="flex flex-col gap-1">
      <div>
        <%= link_to "← Dashboard",
                    subscriptions_path,
                    class: "text-sm link-secondary" %>
      </div>

      <!-- @formatter:off -->
      <!-- whitespace is significant here -->
      <h2 class="break-word" id="name_header"><%= @subscription.name.strip %><a class="external-link" href="<%= @subscription.url %>" target="_blank"></a></h2>
      <!-- @formatter:on -->
    </div>

    <% if @delivery_channel != "email" %>
      <div class="flex flex-col gap-1">
        <p class="font-semibold">Private feed link</p>
        <div>
          <%= render partial: "copy_feed_link",
                     locals: {
                       request: request,
                       subscription: @subscription
                     } %>
        </div>
      </div>
    <% end %>
    <div>
      <span class="font-semibold">Published:</span>
      <span id="published_count"><%= @subscription.published_count %>/<%= @subscription.total_count %></span>
    </div>
    <div>
      <span class="font-semibold">Status:</span>
      <span>
        <% if @subscription.published_count < @subscription.total_count %>
          <% if @subscription.is_paused %>
            Paused
            <%= button_to SubscriptionsHelper.unpause_path(@subscription),
                          { method: :post },
                          form_class: "btn w-min inline" do %>
              <div class="inline-flex flex-row gap-1 mt-1 items-center text-sm rounded-md border border-gray-300 text-gray-700 bg-gray-50 hover:bg-gray-100 hover:cursor-pointer px-2 py-1 font-semibold">
                <!-- play icon -->
                <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"/>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                </svg>
                Resume
              </div>
            <% end %>
          <% else %>
            Active
            <%= button_to SubscriptionsHelper.pause_path(@subscription),
                          { method: :post } do %>
              <div class="inline-flex flex-row gap-1 mt-1 items-center text-sm rounded-md border border-gray-300 text-gray-700 bg-gray-50 hover:bg-gray-100 hover:cursor-pointer px-2 py-1 font-semibold">
                <!-- pause icon -->
                <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
                </svg>
                Pause
              </div>
            <% end %>
          <% end %>
        <% else %>
          All done
        <% end %>
      </span>
    </div>

    <% if @subscription.published_count < @subscription.total_count %>
      <form id="schedule_form">
        <div class="flex flex-col">
          <div class="sticky top-0 bg-white py-1">
            <div id="schedule_header" class="flex flex-row gap-[0.3125rem] items-center flex-wrap">
              <div class="font-semibold self-baseline">Weekly schedule</div>
              <div id="schedule_save_spinner_container">
                <div id="schedule_save_spinner" class="spinner spinner-light hidden"></div>
              </div>
              <div class="flex-1"></div>
              <div id="schedule_empty_error" class="invisible text-red-600 self-baseline text-sm">Select at
                least some days
              </div>
            </div>
          </div>

          <%= render partial: "schedule", locals: {
            subscription_name: @subscription.name,
            current_counts_by_day: @current_counts_by_day,
            other_sub_names_by_day: @other_sub_names_by_day,
            days_of_week: @days_of_week
          }
          %>
        </div>

        <%= number_field_tag "version", @subscription.version, id: "version", class: "hidden" %>

        <script>
            function getScheduleVersion() {
                let version = document.getElementById("version");
                return parseInt(version.value);
            }

            let scheduleRequestsInFlight = 0;
            let isScheduleValid = true;
            let maxSeenVersion = getScheduleVersion();

            function showSpinner() {
                scheduleRequestsInFlight++;
                let spinner = document.getElementById("schedule_save_spinner");
                spinner.classList.remove("hidden");
                void spinner.offsetWidth; // trigger reflow
            }

            function maybeHideSpinner() {
                scheduleRequestsInFlight--;
                if (scheduleRequestsInFlight === 0) {
                    let spinner = document.getElementById("schedule_save_spinner");
                    spinner.classList.add("hidden");
                }
            }

            async function onValidateSchedule(isValid, countsByDay, hasSomethingChanged) {
                isScheduleValid = isValid;

                const scheduleHeader = document.getElementById("schedule_header");
                const scheduleError = document.getElementById("schedule_empty_error");
                const scheduleSpinnerContainer = document.getElementById("schedule_save_spinner_container");
                const scheduleMobile = document.getElementById("schedule_mobile");
                if (isValid) {
                    scheduleError.classList.add("invisible");
                    scheduleSpinnerContainer.classList.remove("hidden");
                    updateNextPosts(countsByDay);
                } else {
                    scheduleSpinnerContainer.classList.add("hidden");
                    const scheduleMobileStyle = window.getComputedStyle(scheduleMobile);
                    if (scheduleMobileStyle.display !== "none") {
                        scheduleHeader.style.maxWidth = scheduleMobileStyle.width;
                    } else {
                        scheduleHeader.style.maxWidth = null;
                    }
                    scheduleError.classList.remove("invisible");
                    // Don't update next posts because the schedule won't be saved
                }

                if (isValid && hasSomethingChanged) {
                    showSpinner();
                    maxSeenVersion = getScheduleVersion() + 1;
                    const requestVersion = maxSeenVersion;
                    document.getElementById("version").value = maxSeenVersion;

                    try {
                        const abortController = new AbortController();
                        const timeoutId = setTimeout(() => abortController.abort(), 30000);
                        const body = new URLSearchParams(new FormData(document.getElementById("schedule_form")));
                        const response = await fetch(
                            window.location,
                            {
                                method: "post",
                                headers: {
                                    "X-CSRF-Token": document.querySelector('meta[name="csrf-token"]').content
                                },
                                body: body,
                                signal: abortController.signal
                            }
                        );

                        if (response.status === 200) {
                            clearTimeout(timeoutId);
                            maybeHideSpinner();
                        } else if (response.status === 409) {
                            const json = await response.json();
                            clearTimeout(timeoutId);
                            maybeHideSpinner();
                            if (json.version >= maxSeenVersion) {
                                showRefreshPopup("Schedule is out of date. Please refresh the page.");
                            }
                            // If the version is older, we're expecting some other request to succeed
                        } else {
                            clearTimeout(timeoutId);
                            maybeHideSpinner();
                            if (requestVersion === maxSeenVersion) {
                                showRefreshPopup("Something went wrong. Please refresh the page.");
                            }
                            // If the version is older, we're expecting some other request to succeed
                        }
                    } catch (err) {
                        // Timeout
                        maybeHideSpinner();
                        showRefreshPopup("Something went wrong. Please refresh the page.");
                    }
                }
            }

            function setNameChangeScheduleCallback(callback) {
            }
        </script>
      </form>

      <%= render partial: "schedule_preview", locals: { schedule_preview: @schedule_preview } %>

      <%= render partial: "schedule_js", locals: {
        days_of_week: @days_of_week,
        js_validate_callback: "onValidateSchedule",
        js_set_name_change_callback: "setNameChangeScheduleCallback"
      } %>
    <% end %>
  </div>

  <div>
    <button id="delete_button" class="btn-red flex flex-row items-center gap-1">
      <!-- trash icon -->
      <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
        <path stroke-linecap="round" stroke-linejoin="round" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
      </svg>
      Delete
    </button>

    <script>
        document
            .getElementById("delete_button")
            .addEventListener("click", () => {
                showDeleteSubscriptionPopup(
                    "Delete ", "<%= @subscription.name %>", "? This cannot be undone.",
                    "<%= subscription_path(@subscription.id) %>", "Keep", "Delete"
                );
            })
    </script>
  </div>
</div>